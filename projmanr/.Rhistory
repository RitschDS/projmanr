library(projmanr)
data <- as.data.frame(read.csv("Book1.csv", header = FALSE))
setwd("C:/Users/Student/Box Sync/R Critical Path/")
data <- as.data.frame(read.csv("Book1.csv", header = FALSE))
data
typeof(data)
gantt(data)
df <- data
all_tasks <- apply(df, 1, read_func)
ids <- lapply(df[,1], to_id)
invisible(lapply(all_tasks, get_successor, full_tasks = all_tasks))
# Create hash map for the tasks
map <- hash::hash(keys = c(ids), values = all_tasks)
walk_ahead(all_tasks, map)
source("C:/Users/Student/Box Sync/R Critical Path/projmanr/R/utility_functions.R")
all_tasks <- apply(df, 1, read_func)
ids <- lapply(df[,1], to_id)
invisible(lapply(all_tasks, get_successor, full_tasks = all_tasks))
# Create hash map for the tasks
map <- hash::hash(keys = c(ids), values = all_tasks)
walk_ahead(all_tasks, map)
all_tasks
df <- to_data_frame(all_tasks)
df
gantt(data)
gantt(data)
critical_path(data)
res <- critical_path(data)
res$results
res$results[[1]]
library(projmanr)
data
critical_path(data)
res <- critical_path(data)
gantt(res$results, F)
projmanr::gantt(res$results, F)
projmanr::gantt(res$results)
library(projmanr)
res <- critical_path(data)
res
data <- as.data.frame(read.csv("Book1.csv", header = FALSE))
gantt(data, )
help(gantt)
gantt(data)
res <- critical_path(data)
res
gantt(res$results, F)
critical_path(data, TRUE)
critical_path(data, T)
critical_path(data)
critical_path(data, gantt = T)
critical_path(data)
critical_path(data, gantt = T)
critical_path(data, gantt = T)
library(projmanr)
critical_path(data, gantt = T)
