deps <- c()
for(i in 1:nrow(df)){
row <- df[i, ]
if(trimws(row$pred_id) == ""){
deps <- c(deps, "")
}else{
deps <- c(deps, paste("Depends:\n", gsub(" ", ", ", trimws(row$pred_id))))
}
}
dfr <- data.frame(
name        = factor(df$id, levels = rev(df$id)),
start.date  = as.Date(c(df$start_date)),
end.date    = as.Date(c(df$end_date)),
critical = c(df$is_critical),
deps = deps
)
mdfr <- gather(dfr, measure.vars = c("start.date", "end.date"))
# Make labels only show up once
for(i in 1:(nrow(mdfr)/2)){
mdfr[i, "deps"] <- ""
}
if(raw){
p <- ggplot(mdfr, aes(value, name)) +
geom_line(colour = "#41a9f4", size = 8) +
geom_text(aes(label = deps), hjust = 0, nudge_x = 0.05, size = 3) +
xlab(NULL) +
ylab("Task ID")
}else{
duration <- sum(df[df$is_critical, ]$duration)
end_date <- start_date + duration
p <- ggplot(mdfr, aes(value, name)) +
geom_line(aes(colour = critical), size = 8) +
geom_text(aes(label = deps), hjust = 0, nudge_x = 0.05, size = 3) +
xlab(NULL) +
ylab("Task ID") +
scale_x_date(limits = c(start_date, end_date + 1)) +
theme(legend.position = "none") +
scale_color_manual(values = cols)
}
p
}
gantt2(data)
gantt2(res)
critical_path(data, gantt = T)
critical_path(data, network = T)
network_diagram <- function(df){
raw = F
# LOOK AT THESE CONDITIONS
if(length(ncol(df) > 0)){
if(ncol(df) == 4){
raw = T
}
}else if(is.null(df$results)){
stop("Invalid input, raw input should have 4 columns, processed should have 7")
}else if(ncol(df$results) != 7){
stop("Invalid input, raw input should have 4 columns, processed should have 7")
}
if(raw){
all_tasks <- list()
for(i in 1:nrow(data)){
id <- to_id(data[i, 1])
name <- data[i, 2]
duration <- data[i, 3]
pred_id <- as.character(data[i, 4])
new_Task <- Task$new(id, name, duration, pred_id)
text <- sprintf("all_tasks <- c(all_tasks, '%s' = new_Task)", new_Task$id)
eval(parse(text = text))
}
ids <- lapply(data[,1], to_id)
invisible(lapply(all_tasks, get_successor, full_tasks = all_tasks))
# Topologically sort the ids
adj_list <- make_node_list(all_tasks, ids)
graph <- graph_from_data_frame(adj_list)
sorted_ids <- names(topo_sort(graph = graph))
# Network diagram
graph <- simplify(graph)
l <- layout.reingold.tilford(graph)
l[, c(1,2)] <- l[ ,c(2,1)]
l[, 1] <- -l[, 1]
# Clean up network coordinates, making sure a node and its dependency are not on the same level
for(i in 1:length(sorted_ids)){
for(j in i:length(sorted_ids)){
if(get.edge.ids(graph, c(i,j)) > 0 && l[i, 1] == l[j, 1]){
l[j, 1] <- l[j, 1] + 0.4
break
}
}
}
V(graph)$color <- "#41a9f4"
plot(graph, layout = l, vertex.shape = "rectangle", vertex.size = 20, vertex.size2 = 15, edge.arrow.size = 0.75)
}
else{
res <- df$results
graph <- simplify(df$network)
sorted_ids <- names(topo_sort(graph = graph))
l <- layout.reingold.tilford(graph)
l[, c(1,2)] <- l[ ,c(2,1)]
l[, 1] <- -l[, 1]
for(i in 1:length(V(graph))){
id <- V(graph)[[i]]$name
if(res[res$id == id, "is_critical"]){
V(graph)$color[i] <- "#f4424b"
}else{
V(graph)$color[i] <- "#41a9f4"
}
}
# Clean up network coordinates, making sure a node and its dependency are not on the same level
for(i in 1:length(sorted_ids)){
for(j in i:length(sorted_ids)){
if(get.edge.ids(graph, c(i,j)) > 0 && l[i, 1] == l[j, 1]){
l[j, 1] <- l[j, 1] + 0.4
break
}
}
}
plot(graph, layout = l, vertex.shape = "rectangle", vertex.size = 20, vertex.size2 = 15, edge.arrow.size = 0.75)
}
p <- recordPlot()
p
}
critical_path(data, network = T)
library(projmanr)
taskdata1
critical_path(data)
data <- taskdata1
critical_path(data)
network_diagram(data)
critical_path(data, network = T)
gantt(taskdata1)
res <- critical_path(data, network = T)
gantt(res)
res <- critical_path(data, network = T, gantt = T)
res
res$gantt
res <- critical_path(data, gantt = T)
res
data <- as.data.frame(read.csv("C:/Users/Student/Box Sync/R Critical Path/data/Book1.csv", header = F))
save(data, file = "C:/Users/Student/Box Sync/R Critical Path/projmanr/data/taskdata2.rda")
data2 <- load("C:\\Users\\Student\\Box Sync\\R Critical Path\\projmanr\\data\\taskdata2.rda")
data2
taskdata2 <- as.data.frame(read.csv("C:/Users/Student/Box Sync/R Critical Path/data/Book1.csv", header = F))
save(taskdata2, "C:\\Users\\Student\\Box Sync\\R Critical Path\\projmanr\\data\\taskdata2.rda")
save(taskdata2, file "C:\\Users\\Student\\Box Sync\\R Critical Path\\projmanr\\data\\taskdata2.rda")
save(taskdata2, file = "C:\\Users\\Student\\Box Sync\\R Critical Path\\projmanr\\data\\taskdata2.rda")
library(projmanr)
taskdata2
network_diagram(taskdata2)
network_diagram(data = taskdata2)
library(projmanr)
network_diagram(taskdata2)
critical_path(taskdata2)
res <- critical_path(taskdata2, gantt = T)
res
network_diagram(rs)
network_diagram(res)
critical_path(taskdata2, network = T)
blah <- list(a = "hi")
blah$b
is.null(blah$b)
library(projmanr)
?taskdata2
taskdata2
critical_path(taskdata2)
data <- taskdata2
data[[1,2]]
data[[1,"pred+id"]]
data[[1,"pred_id"]]
data[[2,"pred_id"]]
data[1,]
data
data[1,4]
data[1,4] <- "-"
data2 <- read.csv("C:/Users/Student/Box Sync/R Critical Path/data/Book1.csv", header = F)
data2
critical_path(data2)
data2 <- read.csv("C:/Users/Student/Box Sync/R Critical Path/data/dragonfly.xlsx", header = F)
data2
data2 <- read.csv("C:/Users/Student/Box Sync/R Critical Path/data/dragonfly.csv", header = F)
data2
critical_path(data2)
network_diagram(data2)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
source('C:/Users/Student/Box Sync/R Critical Path/projmanr/R/critical_path.R', echo=TRUE)
library(projmanr)
data2
critical_path(data2, gantt = T, network = T)
critical_path(data2, gantt = T)
r <- critical_path(data2, gantt = T, network = T)
r$gantt
library(projmanr)
critical_path(taskdata1)
res <- critical_path(taskdata1)
res
res$critical_path
library(projmanr)
taskdata1
nrow(taskdata1)
nrow(res$results)
res <- critical_path(taskdata1)
res
critical_path(taskdata2)
source('C:/Users/Student/Box Sync/R Critical Path/projmanr/tests/testthat/testtaskdata2.R', echo=TRUE)
devtools::create()
devtools::create("C:/Users/Student/Box Sync/R Critical Path/projmanr/data/")
devtools::create("C:/Users/Student/Box Sync/R Critical Path/projmanr")
R
R.version()
R.Version()
R6
sessionInfo()
data <- read.csv("C:/Users/Student/Box Sync/R Critical Path/data/Book1.csv", header = F)
data
critical_path(data)
colnames(data) <- c("id", "name", "duration", "pred")
data
?taskdata1
save(data, "C:/Users/Student/Box Sync/R Critical Path/projmanr/data/taskdata2.rda")
data
save(data, file = "C:/Users/Student/Box Sync/R Critical Path/projmanr/data/taskdata2.rda")
taskdata2 <- read.csv("C:/Users/Student/Box Sync/R Critical Path/data/Book1.csv", header = F)
colnames(data) <- c("id", "name", "duration", "pred")
taskdata2
colnames(taskdata2) <- c("id", "name", "duration", "pred")
taskdata2
save(taskdata2, file = "C:/Users/Student/Box Sync/R Critical Path/projmanr/data/taskdata2.rda")
library(projmanr)
taskdata1
taskdata2
critical_path(taskdata1)
critical_path(taskdata2)
library(projmanr)
critical_path(taskdata1)
critical_path(taskdata1)
library(projmanr)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
mdfr
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
critical_path(data, gantt = T)
library(projmanr)
library(projmanr)
remove.packages(projman)
remove.packages("projman")
remove.packages("projmanr")
install.packages("C:/Users/Student/Desktop/projmanr.zip", repos = NULL, type = "win.binary")
library(projmanr)
taskdata1
critical_path(taskdata1)
critical_path(taskdata1, gantt = T)
1
devtools::install_github("bgreenawald/R Critical Path/projmanr")
devtools::install_github("bgreenawald/projmanr")
devtools::install_github("bgreenawald/projmanr")
install.packages("triangle")
library(triangle)
?`triangle-package`
rtriangle(5, 0, 1, 0.5)
library(microbenchmark)
microbenchmark(rtriangle(5, 0, 1, 0.5), n = 100)
rtriangle(100000, 0, 1, 0.5)
l <- list(a = 1, b = 2)
l$a
l[[a]]
l[["a"]]
typeof(a)
c <- "a"
l[[c]]
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R', echo=TRUE)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
gantt(data)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
data
critical_path(data)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
critical_path(data)
critical_path(data, network = T)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
critical_path(data, network = T)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
critical_path(dat)
critical_path(data)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
data
data <- as.data.frame(read.csv("C:/Users/Student/Box Sync/R Critical Path/data/Book1.csv", header = F))
data
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
gantt(data)
data
typeof(data)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
all_tasks
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
data
data[i, 6]
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
View(df)
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
data[i, 5]
typeof(data[i, 5])
typeof(data[i, 6])
typeof(data[i, 7])
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
uncertain$`44`
uncertain$`44`
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
data <- as.data.frame(read.csv("C:/Users/Student/Box Sync/R Critical Path/data/Book1.csv", header = F))
monte_carlo(data, 10)
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
names(uncertain)
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
names(uncertain)
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
l <- list()
l[[1]] <- NULL
l
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
uncertain
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
uncertain[["$"]]
uncertain[["4"]]
uncertain[["4"]][1]
uncertain[["4"]][-1]
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
data
critical_path(data)
monte_carlo(data, 10)
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
data
critical_path(data)
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
critical_path(data)
monte_carlo(data, 10)
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
all_tasks
all_tasks
all_tasks
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
data
critical_path(data)
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
critical_path(data)
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
all_tasks
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
task
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
map
ids
task
task
task
task
task
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
task
task
task
task
library(projmanr)
data <- as.data.frame(read.csv("C:/Users/Student/Box Sync/R Critical Path/data/Book1.csv", header = F))
critical_path(data)
gantt(data)
dadta
data
critical_path(data, gantt = T)
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
all_tasks[["4"]]
c_path
names(uncertain)
uncertain
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
names(uncertain)
all_tasks[[4]]
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
uncertain
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
all_tasks[['4']]
uncertain
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
all_tasks
clean_tasks
all_tasks
clean_tasks
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
res <- monte_carlo(data, 10)
hist(res)
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
uncertain$``
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
debugSource('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
reset_Class <- function(task, date){
task$is_critical <- F
task$early_finish <- 0
task$early_start <- 0
task$late_finish <- 0
task$late_start <- 0
task$start_date <- date
}
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
source('C:/Users/Student/Box Sync/R Critical Path/dev/critical_path_OO.R')
library(projmanr)
Rcpp::compileAttributes(".")
library(projmanr)
library(projmanr)
taskdata1
data <- taskdata1
data[2,4] <- 1,31
data[2,4] <- "1,31"
data[, 4] <- as.character(data[, 4])
data[2,4] <- "1,31"
data
data <- taskdata1
data[, 4] <- as.character(data[, 4])
data[2,4] <- "1,31"
critical_path(data)
data <- taskdata1
data[1,3] <- -1
critical_path(data)
data
critical_path(data)
library(projmanr)
data[1,3] <- -1
critical_path(data)
data
data
critical_path(data)
library(projmanr)
data <- taskdata1
data[1,3] <- -1
critical_path(data)
debugSource('C:/Users/Student/Box Sync/R Critical Path/projmanr/R/critical_path.R')
critical_path(data)
data
debugSource('C:/Users/Student/Box Sync/R Critical Path/projmanr/R/critical_path.R')
data <- taskdata1
data[1,3] <-  -1
data
critical_path(data)
source('C:/Users/Student/Box Sync/R Critical Path/projmanr/R/utility_functions.R')
critical_path(data)
library(projmanr)
data <- taskdata1
data[1,3] <- -1
critical_path(data)
data <- taskdata1
data[, 4] <- as.character(data[, 4])
data[2,4] <- "1,31"
critical_path(data)
install.packages("trimTrees")
devtools::revdep_check()
